{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Heru1\\\\Documents\\\\GitHub\\\\ThinkfulProjects\\\\M-23\\\\23-02\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Timer.js\";\nimport React from \"react\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nexport default function ButtonComponent({\n  clockValue\n}) {\n  let temp = \"\";\n  let timerTotal = \"\";\n\n  if (clockValue.mode === \"Focus\") {\n    timerTotal = `Focusing for ${minutesToDuration(clockValue.valFocus)} minutes`;\n    temp = clockValue.curFocus * 60;\n  } else if (clockValue.mode === \"On Break\") {\n    timerTotal = `On Break for ${minutesToDuration(clockValue.valBreak)} minutes`;\n    temp = clockValue.curBreak * 60;\n  }\n\n  const timerRemaining = `${secondsToDuration(temp)} remaining`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, timerTotal), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, timerRemaining)));\n}","map":{"version":3,"sources":["C:/Users/Heru1/Documents/GitHub/ThinkfulProjects/M-23/23-02/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Timer.js"],"names":["React","minutesToDuration","secondsToDuration","ButtonComponent","clockValue","temp","timerTotal","mode","valFocus","curFocus","valBreak","curBreak","timerRemaining"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,mBAArD;AAEA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAyC;AACtD,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,UAAU,GAAG,EAAjB;;AACA,MAAIF,UAAU,CAACG,IAAX,KAAoB,OAAxB,EAAiC;AAC/BD,IAAAA,UAAU,GAAI,gBAAeL,iBAAiB,CAC5CG,UAAU,CAACI,QADiC,CAE5C,UAFF;AAGAH,IAAAA,IAAI,GAAGD,UAAU,CAACK,QAAX,GAAsB,EAA7B;AACD,GALD,MAKO,IAAIL,UAAU,CAACG,IAAX,KAAoB,UAAxB,EAAoC;AACzCD,IAAAA,UAAU,GAAI,gBAAeL,iBAAiB,CAC5CG,UAAU,CAACM,QADiC,CAE5C,UAFF;AAGAL,IAAAA,IAAI,GAAGD,UAAU,CAACO,QAAX,GAAsB,EAA7B;AACD;;AAED,QAAMC,cAAc,GAAI,GAAEV,iBAAiB,CAACG,IAAD,CAAO,YAAlD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCC,UAAjC,CAFF,eAIE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,cADH,CAJF,CADF,CADF;AAYD","sourcesContent":["import React from \"react\";\r\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\r\n\r\nexport default function ButtonComponent({ clockValue }) {\r\n  let temp = \"\";\r\n  let timerTotal = \"\";\r\n  if (clockValue.mode === \"Focus\") {\r\n    timerTotal = `Focusing for ${minutesToDuration(\r\n      clockValue.valFocus\r\n    )} minutes`;\r\n    temp = clockValue.curFocus * 60;\r\n  } else if (clockValue.mode === \"On Break\") {\r\n    timerTotal = `On Break for ${minutesToDuration(\r\n      clockValue.valBreak\r\n    )} minutes`;\r\n    temp = clockValue.curBreak * 60;\r\n  }\r\n\r\n  const timerRemaining = `${secondsToDuration(temp)} remaining`;\r\n\r\n  return (\r\n    <div className=\"row mb-2\">\r\n      <div className=\"col\">\r\n        {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\r\n        <h2 data-testid=\"session-title\">{timerTotal}</h2>\r\n        {/* TODO: Update message below to include time remaining in the current session */}\r\n        <p className=\"lead\" data-testid=\"session-sub-title\">\r\n          {timerRemaining}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}