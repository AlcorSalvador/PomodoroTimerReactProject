{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Heru1\\\\Documents\\\\GitHub\\\\ThinkfulProjects\\\\M-23\\\\23-02\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\ButtonComponent.js\";\nimport React from \"react\";\nexport default function ButtonComponent({\n  type,\n  className,\n  dataTestid,\n  className2,\n  masterObject,\n  masterHandler\n}) {\n  function valueIncrement(focusValue) {\n    if (focusValue.val < focusValue.max) focusValue.val += focusValue.inc;\n    return focusValue;\n  }\n\n  function valueDecrement(focusValue) {\n    if (focusValue.val > focusValue.min) focusValue.val -= focusValue.inc;\n    return focusValue;\n  }\n\n  function clamp(n, min, max) {\n    if (n > max) {\n      return max;\n    } else if (n < min) {\n      return min;\n    } else {\n      return n;\n    }\n  }\n\n  const buttonCheck = () => {\n    switch (true) {\n      case dataTestid === \"increase-focus\":\n        {\n          const temp = valueIncrement({ ...focusValue\n          });\n          focusHandler(temp);\n          clockHandler({ ...clockValue,\n            valFocus: temp.val * 60,\n            curFocus: temp.val * 60\n          });\n          break;\n        }\n\n      case dataTestid === \"decrease-focus\":\n        {\n          const temp = valueDecrement({ ...focusValue\n          });\n          focusHandler(temp);\n          clockHandler({ ...clockValue,\n            valFocus: temp.val * 60,\n            curFocus: temp.val * 60\n          });\n          break;\n        }\n\n      case dataTestid === \"increase-break\":\n        {\n          const temp = valueIncrement({ ...breakValue\n          });\n          breakHandler(temp);\n          clockHandler({ ...clockValue,\n            valBreak: temp.val * 60,\n            curBreak: temp.val * 60\n          });\n          break;\n        }\n\n      case dataTestid === \"decrease-break\":\n        {\n          const temp = valueDecrement({ ...breakValue\n          });\n          breakHandler(temp);\n          clockHandler({ ...clockValue,\n            valBreak: temp.val * 60,\n            curBreak: temp.val * 60\n          });\n          break;\n        }\n\n      default:\n        console.log(\"Something is *really* wrong!!!\");\n        break;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    type: type,\n    className: className,\n    \"data-testid\": dataTestid,\n    onClick: buttonCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: className2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Heru1/Documents/GitHub/ThinkfulProjects/M-23/23-02/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ButtonComponent.js"],"names":["React","ButtonComponent","type","className","dataTestid","className2","masterObject","masterHandler","valueIncrement","focusValue","val","max","inc","valueDecrement","min","clamp","n","buttonCheck","temp","focusHandler","clockHandler","clockValue","valFocus","curFocus","breakValue","breakHandler","valBreak","curBreak","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nexport default function ButtonComponent({\r\n  type,\r\n  className,\r\n  dataTestid,\r\n  className2,\r\n  masterObject,\r\n  masterHandler,\r\n}) {\r\n  function valueIncrement(focusValue) {\r\n    if (focusValue.val < focusValue.max) focusValue.val += focusValue.inc;\r\n    return focusValue;\r\n  }\r\n\r\n  function valueDecrement(focusValue) {\r\n    if (focusValue.val > focusValue.min) focusValue.val -= focusValue.inc;\r\n    return focusValue;\r\n  }\r\n\r\n  function clamp(n, min, max) {\r\n    if (n > max) {\r\n      return max;\r\n    } else if (n < min) {\r\n      return min;\r\n    } else {\r\n      return n;\r\n    }\r\n  }\r\n\r\n  const buttonCheck = () => {\r\n    switch (true) {\r\n      case dataTestid === \"increase-focus\": {\r\n        const temp = valueIncrement({ ...focusValue });\r\n        focusHandler(temp);\r\n        clockHandler({\r\n          ...clockValue,\r\n          valFocus: temp.val * 60,\r\n          curFocus: temp.val * 60,\r\n        });\r\n        break;\r\n      }\r\n      case dataTestid === \"decrease-focus\": {\r\n        const temp = valueDecrement({ ...focusValue });\r\n        focusHandler(temp);\r\n        clockHandler({\r\n          ...clockValue,\r\n          valFocus: temp.val * 60,\r\n          curFocus: temp.val * 60,\r\n        });\r\n        break;\r\n      }\r\n      case dataTestid === \"increase-break\": {\r\n        const temp = valueIncrement({ ...breakValue });\r\n        breakHandler(temp);\r\n        clockHandler({\r\n          ...clockValue,\r\n          valBreak: temp.val * 60,\r\n          curBreak: temp.val * 60,\r\n        });\r\n        break;\r\n      }\r\n      case dataTestid === \"decrease-break\": {\r\n        const temp = valueDecrement({ ...breakValue });\r\n        breakHandler(temp);\r\n        clockHandler({\r\n          ...clockValue,\r\n          valBreak: temp.val * 60,\r\n          curBreak: temp.val * 60,\r\n        });\r\n        break;\r\n      }\r\n      default:\r\n        console.log(\"Something is *really* wrong!!!\");\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      type={type}\r\n      className={className}\r\n      data-testid={dataTestid}\r\n      onClick={buttonCheck}\r\n    >\r\n      <span className={className2} />\r\n    </button>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}