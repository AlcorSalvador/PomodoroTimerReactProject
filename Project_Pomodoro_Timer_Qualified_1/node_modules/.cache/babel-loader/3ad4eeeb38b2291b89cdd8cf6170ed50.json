{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Heru1\\\\Documents\\\\GitHub\\\\ThinkfulProjects\\\\M-23\\\\23-02\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\ButtonComponent.js\";\nimport React, { useState } from \"react\";\nexport default function ButtonComponent({\n  type,\n  className,\n  dataTestid,\n  className2,\n  breakValue,\n  breakHandler,\n  focusValue,\n  focusHandler\n}) {\n  /*\r\n  function valueIncrement(durationObj) {\r\n    const preValue = durationObj.value;\r\n    if (durationObj.value < durationObj.max) {\r\n      durationObj.value += durationObj.inc;\r\n      console.log(\r\n        `Sanity Check: Button | Value ${preValue} increased to ${durationObj.value}`\r\n      );\r\n    } else {\r\n      console.log(`Sanity Check: Button | Value ${preValue} has hit the Limit`);\r\n    };\r\n    return durationObj;\r\n  };\r\n    function valueDecrement(durationObj) {\r\n    const preValue = durationObj.value;\r\n    if (durationObj.value > durationObj.min) {\r\n      durationObj.value -= durationObj.inc;\r\n      console.log(\r\n        `Sanity Check: Button | Value ${preValue} increased to ${durationObj.value}`\r\n      );\r\n    } else {\r\n      console.log(`Sanity Check: Button | Value ${preValue} has hit the Limit`);\r\n    };\r\n    return durationObj;\r\n  };\r\n    const buttonCheck = () => {\r\n    switch (true) {\r\n      case dataTestid === \"increase-focus\": {\r\n        //focusValue = valueIncrement(focusValue);\r\n        focusHandler(valueIncrement(focusValue));\r\n        break;\r\n      };\r\n      case dataTestid === \"decrease-focus\": {\r\n        //focusValue = valueDecrement(focusValue);\r\n        focusHandler(valueDecrement(focusValue));\r\n        break;\r\n      };\r\n      case dataTestid === \"increase-break\": {\r\n        //breakValue = valueIncrement(breakValue);\r\n        breakHandler(valueIncrement(breakValue));\r\n        break;\r\n      };\r\n      case dataTestid === \"decrease-break\": {\r\n        //breakValue = valueDecrement(breakValue);\r\n        breakHandler(valueDecrement(breakValue));\r\n        break;\r\n      };\r\n      default:\r\n        break;\r\n    };\r\n  };\r\n  */\n  const buttonCheck = () => {\n    switch (true) {\n      case dataTestid === \"increase-focus\":\n        {\n          //focusValue = valueIncrement(focusValue);\n          //focusHandler(valueIncrement(focusValue));\n          const preValue = focusValue.value;\n\n          if (focusValue.value < focusValue.max) {\n            focusValue.value += focusValue.inc;\n            console.log(`Sanity Check: Button | Value ${preValue} increased to ${focusValue.value}`);\n          } else {\n            console.log(`Sanity Check: Button | Value ${preValue} has hit the Limit`);\n          }\n\n          ;\n          focusHandler(focusValue);\n          break;\n        }\n        ;\n\n      case dataTestid === \"decrease-focus\":\n        {\n          //focusValue = valueDecrement(focusValue);\n          //focusHandler(valueDecrement(focusValue));\n          break;\n        }\n        ;\n\n      case dataTestid === \"increase-break\":\n        {\n          //breakValue = valueIncrement(breakValue);\n          //breakHandler(valueIncrement(breakValue));\n          break;\n        }\n        ;\n\n      case dataTestid === \"decrease-break\":\n        {\n          //breakValue = valueDecrement(breakValue);\n          //breakHandler(valueDecrement(breakValue));\n          break;\n        }\n        ;\n\n      default:\n        break;\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    type: type,\n    className: className,\n    \"data-testid\": dataTestid,\n    onClick: buttonCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: className2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Heru1/Documents/GitHub/ThinkfulProjects/M-23/23-02/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ButtonComponent.js"],"names":["React","useState","ButtonComponent","type","className","dataTestid","className2","breakValue","breakHandler","focusValue","focusHandler","buttonCheck","preValue","value","max","inc","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,eAAe,SAASC,eAAT,CAAyB;AACtCC,EAAAA,IADsC;AAEtCC,EAAAA,SAFsC;AAGtCC,EAAAA,UAHsC;AAItCC,EAAAA,UAJsC;AAKtCC,EAAAA,UALsC;AAMtCC,EAAAA,YANsC;AAOtCC,EAAAA,UAPsC;AAQtCC,EAAAA;AARsC,CAAzB,EASZ;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,QAAMC,WAAW,GAAG,MAAM;AACxB,YAAQ,IAAR;AACE,WAAKN,UAAU,KAAK,gBAApB;AAAsC;AACpC;AACA;AACE,gBAAMO,QAAQ,GAAGH,UAAU,CAACI,KAA5B;;AACA,cAAIJ,UAAU,CAACI,KAAX,GAAmBJ,UAAU,CAACK,GAAlC,EAAuC;AACrCL,YAAAA,UAAU,CAACI,KAAX,IAAoBJ,UAAU,CAACM,GAA/B;AACAC,YAAAA,OAAO,CAACC,GAAR,CACG,gCAA+BL,QAAS,iBAAgBH,UAAU,CAACI,KAAM,EAD5E;AAGD,WALD,MAKO;AACLG,YAAAA,OAAO,CAACC,GAAR,CAAa,gCAA+BL,QAAS,oBAArD;AACD;;AAAA;AACDF,UAAAA,YAAY,CAACD,UAAD,CAAZ;AACF;AACD;AAAA;;AACD,WAAKJ,UAAU,KAAK,gBAApB;AAAsC;AACpC;AACA;AACA;AACD;AAAA;;AACD,WAAKA,UAAU,KAAK,gBAApB;AAAsC;AACpC;AACA;AACA;AACD;AAAA;;AACD,WAAKA,UAAU,KAAK,gBAApB;AAAsC;AACpC;AACA;AACA;AACD;AAAA;;AACD;AACE;AAhCJ;;AAiCC;AACF,GAnCD;;AAsCE,sBACE;AACE,IAAA,IAAI,EAAEF,IADR;AAEE,IAAA,SAAS,EAAEC,SAFb;AAGE,mBAAaC,UAHf;AAIE,IAAA,OAAO,EAAEM,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAM,IAAA,SAAS,EAAEL,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function ButtonComponent({\r\n  type,\r\n  className,\r\n  dataTestid,\r\n  className2,\r\n  breakValue,\r\n  breakHandler,\r\n  focusValue,\r\n  focusHandler,\r\n}) {\r\n  /*\r\n  function valueIncrement(durationObj) {\r\n    const preValue = durationObj.value;\r\n    if (durationObj.value < durationObj.max) {\r\n      durationObj.value += durationObj.inc;\r\n      console.log(\r\n        `Sanity Check: Button | Value ${preValue} increased to ${durationObj.value}`\r\n      );\r\n    } else {\r\n      console.log(`Sanity Check: Button | Value ${preValue} has hit the Limit`);\r\n    };\r\n    return durationObj;\r\n  };\r\n\r\n  function valueDecrement(durationObj) {\r\n    const preValue = durationObj.value;\r\n    if (durationObj.value > durationObj.min) {\r\n      durationObj.value -= durationObj.inc;\r\n      console.log(\r\n        `Sanity Check: Button | Value ${preValue} increased to ${durationObj.value}`\r\n      );\r\n    } else {\r\n      console.log(`Sanity Check: Button | Value ${preValue} has hit the Limit`);\r\n    };\r\n    return durationObj;\r\n  };\r\n\r\n  const buttonCheck = () => {\r\n    switch (true) {\r\n      case dataTestid === \"increase-focus\": {\r\n        //focusValue = valueIncrement(focusValue);\r\n        focusHandler(valueIncrement(focusValue));\r\n        break;\r\n      };\r\n      case dataTestid === \"decrease-focus\": {\r\n        //focusValue = valueDecrement(focusValue);\r\n        focusHandler(valueDecrement(focusValue));\r\n        break;\r\n      };\r\n      case dataTestid === \"increase-break\": {\r\n        //breakValue = valueIncrement(breakValue);\r\n        breakHandler(valueIncrement(breakValue));\r\n        break;\r\n      };\r\n      case dataTestid === \"decrease-break\": {\r\n        //breakValue = valueDecrement(breakValue);\r\n        breakHandler(valueDecrement(breakValue));\r\n        break;\r\n      };\r\n      default:\r\n        break;\r\n    };\r\n  };\r\n*/\r\nconst buttonCheck = () => {\r\n  switch (true) {\r\n    case dataTestid === \"increase-focus\": {\r\n      //focusValue = valueIncrement(focusValue);\r\n      //focusHandler(valueIncrement(focusValue));\r\n        const preValue = focusValue.value;\r\n        if (focusValue.value < focusValue.max) {\r\n          focusValue.value += focusValue.inc;\r\n          console.log(\r\n            `Sanity Check: Button | Value ${preValue} increased to ${focusValue.value}`\r\n          );\r\n        } else {\r\n          console.log(`Sanity Check: Button | Value ${preValue} has hit the Limit`);\r\n        };\r\n        focusHandler(focusValue);\r\n      break;\r\n    };\r\n    case dataTestid === \"decrease-focus\": {\r\n      //focusValue = valueDecrement(focusValue);\r\n      //focusHandler(valueDecrement(focusValue));\r\n      break;\r\n    };\r\n    case dataTestid === \"increase-break\": {\r\n      //breakValue = valueIncrement(breakValue);\r\n      //breakHandler(valueIncrement(breakValue));\r\n      break;\r\n    };\r\n    case dataTestid === \"decrease-break\": {\r\n      //breakValue = valueDecrement(breakValue);\r\n      //breakHandler(valueDecrement(breakValue));\r\n      break;\r\n    };\r\n    default:\r\n      break;\r\n  };\r\n};\r\n\r\n\r\n  return (\r\n    <button\r\n      type={type}\r\n      className={className}\r\n      data-testid={dataTestid}\r\n      onClick={buttonCheck}\r\n    >\r\n      <span className={className2} />\r\n    </button>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}