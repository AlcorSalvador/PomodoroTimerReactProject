{"ast":null,"code":"import React from \"react\";\nexport default function Interval({\n  masterObject,\n  masterHandler\n}) {\n  const intervalCounter = () => {\n    if (masterObject.focusCount === 0) {\n      masterHandler({ ...masterObject,\n        focusCount: masterObject.focusCur * 60,\n        mode: \"Break\"\n      });\n    } else if (masterObject.breakCount === 0) {\n      masterHandler({ ...masterObject,\n        breakCount: masterObject.breakCur * 60,\n        mode: \"Focus\"\n      });\n    } else {\n      switch (true) {\n        case masterObject.mode === \"Focus\":\n          {\n            masterHandler({ ...masterObject,\n              focusCount: masterObject.focusCount - 1,\n              state: \"Running\"\n            });\n            break;\n          }\n\n        case masterObject.mode === \"Break\":\n          {\n            masterHandler({ ...masterObject,\n              breakCount: masterObject.breakCount - 1,\n              state: \"Running\"\n            });\n            break;\n          }\n\n        default:\n          break;\n      }\n    }\n  };\n\n  return intervalCounter;\n}","map":{"version":3,"sources":["C:/Users/Heru1/Documents/GitHub/ThinkfulProjects/M-23/23-02/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Interval.js"],"names":["React","Interval","masterObject","masterHandler","intervalCounter","focusCount","focusCur","mode","breakCount","breakCur","state"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAlB,EAAmD;AAChE,QAAMC,eAAe,GAAG,MAAM;AAC5B,QAAIF,YAAY,CAACG,UAAb,KAA4B,CAAhC,EAAmC;AACjCF,MAAAA,aAAa,CAAC,EACZ,GAAGD,YADS;AAEZG,QAAAA,UAAU,EAAEH,YAAY,CAACI,QAAb,GAAwB,EAFxB;AAGZC,QAAAA,IAAI,EAAE;AAHM,OAAD,CAAb;AAKD,KAND,MAMO,IAAIL,YAAY,CAACM,UAAb,KAA4B,CAAhC,EAAmC;AACxCL,MAAAA,aAAa,CAAC,EACZ,GAAGD,YADS;AAEZM,QAAAA,UAAU,EAAEN,YAAY,CAACO,QAAb,GAAwB,EAFxB;AAGZF,QAAAA,IAAI,EAAE;AAHM,OAAD,CAAb;AAKD,KANM,MAMA;AACL,cAAQ,IAAR;AACE,aAAKL,YAAY,CAACK,IAAb,KAAsB,OAA3B;AAAoC;AAClCJ,YAAAA,aAAa,CAAC,EACZ,GAAGD,YADS;AAEZG,cAAAA,UAAU,EAAEH,YAAY,CAACG,UAAb,GAA0B,CAF1B;AAGZK,cAAAA,KAAK,EAAE;AAHK,aAAD,CAAb;AAKA;AACD;;AACD,aAAKR,YAAY,CAACK,IAAb,KAAsB,OAA3B;AAAoC;AAClCJ,YAAAA,aAAa,CAAC,EACZ,GAAGD,YADS;AAEZM,cAAAA,UAAU,EAAEN,YAAY,CAACM,UAAb,GAA0B,CAF1B;AAGZE,cAAAA,KAAK,EAAE;AAHK,aAAD,CAAb;AAKA;AACD;;AACD;AACE;AAlBJ;AAoBD;AACF,GAnCD;;AAoCA,SAAON,eAAP;AACD","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Interval({ masterObject, masterHandler }) {\r\n  const intervalCounter = () => {\r\n    if (masterObject.focusCount === 0) {\r\n      masterHandler({\r\n        ...masterObject,\r\n        focusCount: masterObject.focusCur * 60,\r\n        mode: \"Break\",\r\n      });\r\n    } else if (masterObject.breakCount === 0) {\r\n      masterHandler({\r\n        ...masterObject,\r\n        breakCount: masterObject.breakCur * 60,\r\n        mode: \"Focus\",\r\n      });\r\n    } else {\r\n      switch (true) {\r\n        case masterObject.mode === \"Focus\": {\r\n          masterHandler({\r\n            ...masterObject,\r\n            focusCount: masterObject.focusCount - 1,\r\n            state: \"Running\",\r\n          });\r\n          break;\r\n        }\r\n        case masterObject.mode === \"Break\": {\r\n          masterHandler({\r\n            ...masterObject,\r\n            breakCount: masterObject.breakCount - 1,\r\n            state: \"Running\",\r\n          });\r\n          break;\r\n        }\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n  return intervalCounter;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}