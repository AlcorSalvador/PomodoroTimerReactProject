{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Heru1\\\\Documents\\\\GitHub\\\\ThinkfulProjects\\\\M-23\\\\23-02\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport ButtonComponent from \"./ButtonComponent\";\nimport Timer from \"./Timer\";\nimport StopButton from \"./StopButton\";\nimport { minutesToDuration } from \"../utils/duration\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  console.log(`Sanity Check ${isTimerRunning}`);\n  const [masterObject, masterHandler] = useState({\n    focusCur: 0,\n    breakCur: 0,\n    focusMin: 0,\n    breakMin: 0,\n    focusMax: 0,\n    breakMax: 0,\n    focusInc: 0,\n    breakInc: 0,\n    focusCount: 0,\n    breakCount: 0,\n    mode: \"Focus\",\n    state: \"Stopped\",\n    disabled: false\n  });\n  console.log({ ...masterObject\n  });\n  /*\n    useInterval(\n      () => {\n        // ToDo: Implement what should happen when the timer is running\n        switch (true) {\n          case masterObject.mode === \"Focus\": {\n            masterObject({\n              ...clockValue,\n              curFocus: clockValue.curFocus - 1,\n              state: \"Running\",\n            });\n            break;\n          }\n          case masterObject.mode === \"Break\": {\n            masterObject({\n              ...clockValue,\n              curBreak: clockValue.curBreak - 1,\n              state: \"Running\",\n            });\n            break;\n          }\n          default:\n            break;\n        }\n      },\n      isTimerRunning ? 1000 : null\n    );\n  */\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", minutesToDuration(focusValue.val)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonComponent, {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    dataTestid: \"decrease-focus\",\n    className2: \"oi oi-minus\",\n    masterObject: masterObject,\n    masterHandler: masterHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ButtonComponent, {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    dataTestid: \"increase-focus\",\n    className2: \"oi oi-plus\",\n    masterObject: masterObject,\n    masterHandler: masterHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", minutesToDuration(breakValue.val)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonComponent, {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    dataTestid: \"decrease-break\",\n    className2: \"oi oi-minus\",\n    masterObject: masterObject,\n    masterHandler: masterHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ButtonComponent, {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    dataTestid: \"increase-break\",\n    className2: \"oi oi-plus\",\n    masterObject: masterObject,\n    masterHandler: masterHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(StopButton, {\n    masterObject: masterObject,\n    masterHandler: masterHandler,\n    playPause: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Timer, {\n    masterObject: masterObject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/Heru1/Documents/GitHub/ThinkfulProjects/M-23/23-02/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","ButtonComponent","Timer","StopButton","minutesToDuration","Pomodoro","isTimerRunning","setIsTimerRunning","console","log","masterObject","masterHandler","focusCur","breakCur","focusMin","breakMin","focusMax","breakMax","focusInc","breakInc","focusCount","breakCount","mode","state","disabled","playPause","prevState","focusValue","val","breakValue","oi"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;;AAEA,SAASC,QAAT,GAAoB;AAClB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,KAAD,CAApD;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeH,cAAe,EAA3C;AAEA,QAAM,CAACI,YAAD,EAAeC,aAAf,IAAgCb,QAAQ,CAAC;AAC7Cc,IAAAA,QAAQ,EAAE,CADmC;AAE7CC,IAAAA,QAAQ,EAAE,CAFmC;AAG7CC,IAAAA,QAAQ,EAAE,CAHmC;AAI7CC,IAAAA,QAAQ,EAAE,CAJmC;AAK7CC,IAAAA,QAAQ,EAAE,CALmC;AAM7CC,IAAAA,QAAQ,EAAE,CANmC;AAO7CC,IAAAA,QAAQ,EAAE,CAPmC;AAQ7CC,IAAAA,QAAQ,EAAE,CARmC;AAS7CC,IAAAA,UAAU,EAAE,CATiC;AAU7CC,IAAAA,UAAU,EAAE,CAViC;AAW7CC,IAAAA,IAAI,EAAE,OAXuC;AAY7CC,IAAAA,KAAK,EAAE,SAZsC;AAa7CC,IAAAA,QAAQ,EAAE;AAbmC,GAAD,CAA9C;AAgBAhB,EAAAA,OAAO,CAACC,GAAR,CAAY,EAAE,GAAGC;AAAL,GAAZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,WAASe,SAAT,GAAqB;AACnBlB,IAAAA,iBAAiB,CAAEmB,SAAD,IAAe,CAACA,SAAjB,CAAjB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,mBAAY,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEmBtB,iBAAiB,CAACuB,UAAU,CAACC,GAAZ,CAFpC,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,eAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,UAAU,EAAC,gBAHb;AAIE,IAAA,UAAU,EAAC,aAJb;AAKE,IAAA,YAAY,EAAElB,YALhB;AAME,IAAA,aAAa,EAAEC,aANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAWE,oBAAC,eAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,UAAU,EAAC,gBAHb;AAIE,IAAA,UAAU,EAAC,YAJb;AAKE,IAAA,YAAY,EAAED,YALhB;AAME,IAAA,aAAa,EAAEC,aANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CALF,CADF,CADF,eA6BE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,mBAAY,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEmBP,iBAAiB,CAACyB,UAAU,CAACD,GAAZ,CAFpC,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,eAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,UAAU,EAAC,gBAHb;AAIE,IAAA,UAAU,EAAC,aAJb;AAKE,IAAA,YAAY,EAAElB,YALhB;AAME,IAAA,aAAa,EAAEC,aANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAWE,oBAAC,eAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,UAAU,EAAC,gBAHb;AAIE,IAAA,UAAU,EAAC,YAJb;AAKE,IAAA,YAAY,EAAED,YALhB;AAME,IAAA,aAAa,EAAEC,aANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CALF,CADF,CADF,CA7BF,CADF,eA6DE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,6BADZ;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,kBAAW,gBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,mBAAY,YAHd;AAIE,IAAA,KAAK,EAAC,sBAJR;AAKE,IAAA,OAAO,EAAEc,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AACE,IAAA,SAAS,EAAE1B,UAAU,CAAC;AACpB+B,MAAAA,EAAE,EAAE,IADgB;AAEpB,uBAAiB,CAACxB,cAFE;AAGpB,wBAAkBA;AAHE,KAAD,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CALF,eAqBE,oBAAC,UAAD;AACE,IAAA,YAAY,EAAEI,YADhB;AAEE,IAAA,aAAa,EAAEC,aAFjB;AAGE,IAAA,SAAS,EAAEc,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CADF,CADF,CA7DF,eA4FE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,KAAD;AAAO,IAAA,YAAY,EAAEf,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA5FF,CADF;AAmGD;;AAED,eAAeL,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\n\nimport ButtonComponent from \"./ButtonComponent\";\nimport Timer from \"./Timer\";\nimport StopButton from \"./StopButton\";\nimport { minutesToDuration } from \"../utils/duration\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  console.log(`Sanity Check ${isTimerRunning}`);\n\n  const [masterObject, masterHandler] = useState({\n    focusCur: 0,\n    breakCur: 0,\n    focusMin: 0,\n    breakMin: 0,\n    focusMax: 0,\n    breakMax: 0,\n    focusInc: 0,\n    breakInc: 0,\n    focusCount: 0,\n    breakCount: 0,\n    mode: \"Focus\",\n    state: \"Stopped\",\n    disabled: false\n  });\n\n  console.log({ ...masterObject });\n/*\n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n      switch (true) {\n        case masterObject.mode === \"Focus\": {\n          masterObject({\n            ...clockValue,\n            curFocus: clockValue.curFocus - 1,\n            state: \"Running\",\n          });\n          break;\n        }\n        case masterObject.mode === \"Break\": {\n          masterObject({\n            ...clockValue,\n            curBreak: clockValue.curBreak - 1,\n            state: \"Running\",\n          });\n          break;\n        }\n        default:\n          break;\n      }\n    },\n    isTimerRunning ? 1000 : null\n  );\n*/\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(focusValue.val)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <ButtonComponent\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                dataTestid=\"decrease-focus\"\n                className2=\"oi oi-minus\"\n                masterObject={masterObject}\n                masterHandler={masterHandler}\n              />\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <ButtonComponent\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                dataTestid=\"increase-focus\"\n                className2=\"oi oi-plus\"\n                masterObject={masterObject}\n                masterHandler={masterHandler}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {minutesToDuration(breakValue.val)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <ButtonComponent\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  dataTestid=\"decrease-break\"\n                  className2=\"oi oi-minus\"\n                  masterObject={masterObject}\n                  masterHandler={masterHandler}\n                />\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <ButtonComponent\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  dataTestid=\"increase-break\"\n                  className2=\"oi oi-plus\"\n                  masterObject={masterObject}\n                  masterHandler={masterHandler}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <StopButton\n              masterObject={masterObject}\n              masterHandler={masterHandler}\n              playPause={playPause}\n            />\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\n        <Timer masterObject={masterObject} />\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}