{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Heru1\\\\Documents\\\\GitHub\\\\ThinkfulProjects\\\\M-23\\\\23-02\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Timer.js\";\nimport React from \"react\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nexport default function Timer({\n  clockValue\n}) {\n  function topTimer() {\n    let temp = \"\";\n    let timerTotal = \"\";\n\n    if (clockValue.mode === \"Focus\") {\n      timerTotal = `Focusing for ${minutesToDuration(clockValue.valFocus)} minutes`;\n      temp = clockValue.curFocus * 60;\n    } else if (clockValue.mode === \"On Break\") {\n      timerTotal = `On Break for ${minutesToDuration(clockValue.valBreak)} minutes`;\n      temp = clockValue.curBreak * 60;\n    }\n\n    const timerRemaining = `${secondsToDuration(temp)} remaining`;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"session-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, timerTotal), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      \"data-testid\": \"session-sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, timerRemaining)));\n  }\n\n  function bottomTimer() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      style: {\n        height: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\",\n      role: \"progressbar\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      \"aria-valuenow\": \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n      ,\n      style: {\n        width: \"0%\"\n      } // TODO: Increase width % as elapsed time increases\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, topTimer(), bottomTimer());\n}","map":{"version":3,"sources":["C:/Users/Heru1/Documents/GitHub/ThinkfulProjects/M-23/23-02/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Timer.js"],"names":["React","minutesToDuration","secondsToDuration","Timer","clockValue","topTimer","temp","timerTotal","mode","valFocus","curFocus","valBreak","curBreak","timerRemaining","bottomTimer","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,mBAArD;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA+B;AAC5C,WAASC,QAAT,GAAoB;AAClB,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,UAAU,GAAG,EAAjB;;AACA,QAAIH,UAAU,CAACI,IAAX,KAAoB,OAAxB,EAAiC;AAC/BD,MAAAA,UAAU,GAAI,gBAAeN,iBAAiB,CAC5CG,UAAU,CAACK,QADiC,CAE5C,UAFF;AAGAH,MAAAA,IAAI,GAAGF,UAAU,CAACM,QAAX,GAAsB,EAA7B;AACD,KALD,MAKO,IAAIN,UAAU,CAACI,IAAX,KAAoB,UAAxB,EAAoC;AACzCD,MAAAA,UAAU,GAAI,gBAAeN,iBAAiB,CAC5CG,UAAU,CAACO,QADiC,CAE5C,UAFF;AAGAL,MAAAA,IAAI,GAAGF,UAAU,CAACQ,QAAX,GAAsB,EAA7B;AACD;;AAED,UAAMC,cAAc,GAAI,GAAEX,iBAAiB,CAACI,IAAD,CAAO,YAAlD;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCC,UAAjC,CAFF,eAIE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,qBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGM,cADH,CAJF,CADF,CADF;AAYD;;AAED,WAASC,WAAT,GAAuB;AACrB,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,uBAAc,GAHhB;AAIE,uBAAc,KAJhB;AAKE,uBAAc,GALhB,CAKoB;AALpB;AAME,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OANT,CAM0B;AAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CADF;AAgBD;;AAED,sBAAO,0CAAGX,QAAQ,EAAX,EAAeS,WAAW,EAA1B,CAAP;AACD","sourcesContent":["import React from \"react\";\r\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\r\n\r\nexport default function Timer({ clockValue }) {\r\n  function topTimer() {\r\n    let temp = \"\";\r\n    let timerTotal = \"\";\r\n    if (clockValue.mode === \"Focus\") {\r\n      timerTotal = `Focusing for ${minutesToDuration(\r\n        clockValue.valFocus\r\n      )} minutes`;\r\n      temp = clockValue.curFocus * 60;\r\n    } else if (clockValue.mode === \"On Break\") {\r\n      timerTotal = `On Break for ${minutesToDuration(\r\n        clockValue.valBreak\r\n      )} minutes`;\r\n      temp = clockValue.curBreak * 60;\r\n    }\r\n\r\n    const timerRemaining = `${secondsToDuration(temp)} remaining`;\r\n    return (\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col\">\r\n          {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\r\n          <h2 data-testid=\"session-title\">{timerTotal}</h2>\r\n          {/* TODO: Update message below to include time remaining in the current session */}\r\n          <p className=\"lead\" data-testid=\"session-sub-title\">\r\n            {timerRemaining}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function bottomTimer() {\r\n    return (\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col\">\r\n          <div className=\"progress\" style={{ height: \"20px\" }}>\r\n            <div\r\n              className=\"progress-bar\"\r\n              role=\"progressbar\"\r\n              aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\"\r\n              aria-valuenow=\"0\" // TODO: Increase aria-valuenow as elapsed time increases\r\n              style={{ width: \"0%\" }} // TODO: Increase width % as elapsed time increases\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <>{topTimer()}{bottomTimer()}</>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}