{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Heru1\\\\Documents\\\\GitHub\\\\ThinkfulProjects\\\\M-23\\\\23-02\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport ButtonComponent from \"./ButtonComponent\";\nimport Timer from \"./Timer\";\nimport StopButton from \"./StopButton\";\nimport { minutesToDuration } from \"../utils/duration\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const masterDefault = {\n    focusCur: 25,\n    breakCur: 5,\n    focusMin: 5,\n    breakMin: 1,\n    focusMax: 60,\n    breakMax: 15,\n    focusInc: 5,\n    breakInc: 1,\n    focusCount: 1500,\n    breakCount: 300,\n    mode: \"Focus\",\n    state: \"Stopped\",\n    disabled: false,\n    isRunning: false\n  };\n  const [masterObject, masterHandler] = useState({ ...masterDefault\n  }); // Needed to Activate Frame 1, otherwise Lags 1 frame\n\n  if (isTimerRunning && masterObject.state == false) {\n    masterHandler({ ...masterObject,\n      isRunning: true\n    });\n  }\n\n  useInterval(() => {\n    // Check if focusCount or breakCount (which is in Seconds) is 0, and if so\n    // Flip the Mode and Reset the respective Counter\n    // If\n    switch (true) {\n      case masterObject.focusCount === 0:\n        {\n          masterHandler({ ...masterObject,\n            focusCount: masterObject.focusCur * 60,\n            mode: \"Break\"\n          });\n          new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n          break;\n        }\n\n      case masterObject.breakCount === 0:\n        {\n          masterHandler({ ...masterObject,\n            breakCount: masterObject.breakCur * 60,\n            mode: \"Focus\"\n          });\n          new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n          break;\n        }\n\n      case masterObject.mode === \"Focus\":\n        {\n          masterHandler({ ...masterObject,\n            focusCount: masterObject.focusCount - 1\n          });\n          break;\n        }\n\n      case masterObject.mode === \"Break\":\n        {\n          masterHandler({ ...masterObject,\n            breakCount: masterObject.breakCount - 1\n          });\n          break;\n        }\n\n      default:\n        break;\n    }\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", minutesToDuration(masterObject.focusCur)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonComponent, {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    dataTestid: \"decrease-focus\",\n    className2: \"oi oi-minus\",\n    masterObject: masterObject,\n    masterHandler: masterHandler,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ButtonComponent, {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    dataTestid: \"increase-focus\",\n    className2: \"oi oi-plus\",\n    masterObject: masterObject,\n    masterHandler: masterHandler,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", minutesToDuration(masterObject.breakCur)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonComponent, {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    dataTestid: \"decrease-break\",\n    className2: \"oi oi-minus\",\n    masterObject: masterObject,\n    masterHandler: masterHandler,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ButtonComponent, {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    dataTestid: \"increase-break\",\n    className2: \"oi oi-plus\",\n    masterObject: masterObject,\n    masterHandler: masterHandler,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(StopButton, {\n    masterObject: masterObject,\n    masterHandler: masterHandler,\n    isTimerRunning: isTimerRunning,\n    playPause: playPause,\n    masterDefault: masterDefault,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Timer, {\n    masterObject: masterObject,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/Heru1/Documents/GitHub/ThinkfulProjects/M-23/23-02/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","ButtonComponent","Timer","StopButton","minutesToDuration","Pomodoro","isTimerRunning","setIsTimerRunning","masterDefault","focusCur","breakCur","focusMin","breakMin","focusMax","breakMax","focusInc","breakInc","focusCount","breakCount","mode","state","disabled","isRunning","masterObject","masterHandler","Audio","play","playPause","prevState","oi"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\n\nimport ButtonComponent from \"./ButtonComponent\";\nimport Timer from \"./Timer\";\nimport StopButton from \"./StopButton\";\nimport { minutesToDuration } from \"../utils/duration\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n\n  const masterDefault = {\n    focusCur: 25,\n    breakCur: 5,\n    focusMin: 5,\n    breakMin: 1,\n    focusMax: 60,\n    breakMax: 15,\n    focusInc: 5,\n    breakInc: 1,\n    focusCount: 1500,\n    breakCount: 300,\n    mode: \"Focus\",\n    state: \"Stopped\",\n    disabled: false,\n    isRunning: false\n  };\n\n  const [masterObject, masterHandler] = useState({ ...masterDefault });\n\n  // Needed to Activate Frame 1, otherwise Lags 1 frame\n  if (isTimerRunning && masterObject.state == false) {\n    masterHandler({\n      ...masterObject,\n      isRunning: true,\n    });\n  }\n\n  useInterval(\n    () => {\n      // Check if focusCount or breakCount (which is in Seconds) is 0, and if so\n      // Flip the Mode and Reset the respective Counter\n      // If\n      switch (true) {\n        case masterObject.focusCount === 0: {\n          masterHandler({\n            ...masterObject,\n            focusCount: masterObject.focusCur * 60,\n            mode: \"Break\",\n          });\n          new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n          break;\n        }\n        case masterObject.breakCount === 0: {\n          masterHandler({\n            ...masterObject,\n            breakCount: masterObject.breakCur * 60,\n            mode: \"Focus\",\n          });\n          new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n          break;\n        }\n        case masterObject.mode === \"Focus\": {\n          masterHandler({\n            ...masterObject,\n            focusCount: masterObject.focusCount - 1,\n          });\n          break;\n        }\n        case masterObject.mode === \"Break\": {\n          masterHandler({\n            ...masterObject,\n            breakCount: masterObject.breakCount - 1,\n          });\n          break;\n        }\n        default:\n          break;\n      }\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(masterObject.focusCur)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <ButtonComponent\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                dataTestid=\"decrease-focus\"\n                className2=\"oi oi-minus\"\n                masterObject={masterObject}\n                masterHandler={masterHandler}\n                isTimerRunning={isTimerRunning}\n              />\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <ButtonComponent\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                dataTestid=\"increase-focus\"\n                className2=\"oi oi-plus\"\n                masterObject={masterObject}\n                masterHandler={masterHandler}\n                isTimerRunning={isTimerRunning}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {minutesToDuration(masterObject.breakCur)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <ButtonComponent\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  dataTestid=\"decrease-break\"\n                  className2=\"oi oi-minus\"\n                  masterObject={masterObject}\n                  masterHandler={masterHandler}\n                  isTimerRunning={isTimerRunning}\n                />\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <ButtonComponent\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  dataTestid=\"increase-break\"\n                  className2=\"oi oi-plus\"\n                  masterObject={masterObject}\n                  masterHandler={masterHandler}\n                  isTimerRunning={isTimerRunning}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <StopButton\n              masterObject={masterObject}\n              masterHandler={masterHandler}\n              isTimerRunning={isTimerRunning}\n              playPause={playPause}\n              masterDefault={masterDefault}\n            />\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\n        <Timer masterObject={masterObject} isTimerRunning={isTimerRunning} />\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}