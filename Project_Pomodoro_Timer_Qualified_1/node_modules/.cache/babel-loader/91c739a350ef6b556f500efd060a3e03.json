{"ast":null,"code":"import React from \"react\";\nexport default function ClockEvaluator({\n  breakValue,\n  focusValue,\n  clockValue,\n  clockHandler,\n  playPause\n}) {\n  function finishEval() {\n    if (clockValue.curFocus !== 0) {\n      switch (true) {\n        case clockValue.mode === \"Stopped\":\n          {\n            clockHandler({\n              valFocus: focusValue.val * 60,\n              curFocus: focusValue.val * 60,\n              valBreak: breakValue.val * 60,\n              curBreak: breakValue.val * 60,\n              mode: \"Focus\",\n              state: \"Stopped\"\n            });\n            playPause();\n            break;\n          }\n\n        case clockValue.mode === \"Focus\":\n          {\n            clockHandler({ ...clockValue,\n              curFocus: clockValue.curFocus - 1,\n              state: \"Running\"\n            });\n            break;\n          }\n\n        case clockValue.mode === \"Break\":\n          {\n            clockHandler({ ...clockValue,\n              curFocus: clockValue.curFocus - 1,\n              state: \"Running\"\n            });\n            break;\n          }\n\n        default:\n          {\n            clockHandler({\n              valFocus: focusValue.val * 60,\n              curFocus: focusValue.val * 60,\n              valBreak: breakValue.val * 60,\n              curBreak: breakValue.val * 60,\n              mode: \"Focus\",\n              state: \"Stopped\"\n            });\n            playPause();\n            break;\n          }\n      }\n    }\n  }\n\n  return finishEval();\n}","map":{"version":3,"sources":["C:/Users/Heru1/Documents/GitHub/ThinkfulProjects/M-23/23-02/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ClockEvaluator.js"],"names":["React","ClockEvaluator","breakValue","focusValue","clockValue","clockHandler","playPause","finishEval","curFocus","mode","valFocus","val","valBreak","curBreak","state"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,cAAT,CAAwB;AACrCC,EAAAA,UADqC;AAErCC,EAAAA,UAFqC;AAGrCC,EAAAA,UAHqC;AAIrCC,EAAAA,YAJqC;AAKrCC,EAAAA;AALqC,CAAxB,EAMZ;AACD,WAASC,UAAT,GAAsB;AACpB,QAAIH,UAAU,CAACI,QAAX,KAAwB,CAA5B,EAA+B;AAC7B,cAAQ,IAAR;AACE,aAAKJ,UAAU,CAACK,IAAX,KAAoB,SAAzB;AAAoC;AAClCJ,YAAAA,YAAY,CAAC;AACXK,cAAAA,QAAQ,EAAEP,UAAU,CAACQ,GAAX,GAAiB,EADhB;AAEXH,cAAAA,QAAQ,EAAEL,UAAU,CAACQ,GAAX,GAAiB,EAFhB;AAGXC,cAAAA,QAAQ,EAAEV,UAAU,CAACS,GAAX,GAAiB,EAHhB;AAIXE,cAAAA,QAAQ,EAAEX,UAAU,CAACS,GAAX,GAAiB,EAJhB;AAKXF,cAAAA,IAAI,EAAE,OALK;AAMXK,cAAAA,KAAK,EAAE;AANI,aAAD,CAAZ;AAQAR,YAAAA,SAAS;AACT;AACD;;AACD,aAAKF,UAAU,CAACK,IAAX,KAAoB,OAAzB;AAAkC;AAChCJ,YAAAA,YAAY,CAAC,EACX,GAAGD,UADQ;AAEXI,cAAAA,QAAQ,EAAEJ,UAAU,CAACI,QAAX,GAAsB,CAFrB;AAGXM,cAAAA,KAAK,EAAE;AAHI,aAAD,CAAZ;AAKA;AACD;;AACD,aAAKV,UAAU,CAACK,IAAX,KAAoB,OAAzB;AAAkC;AAChCJ,YAAAA,YAAY,CAAC,EACX,GAAGD,UADQ;AAEXI,cAAAA,QAAQ,EAAEJ,UAAU,CAACI,QAAX,GAAsB,CAFrB;AAGXM,cAAAA,KAAK,EAAE;AAHI,aAAD,CAAZ;AAKA;AACD;;AACD;AAAS;AACPT,YAAAA,YAAY,CAAC;AACXK,cAAAA,QAAQ,EAAEP,UAAU,CAACQ,GAAX,GAAiB,EADhB;AAEXH,cAAAA,QAAQ,EAAEL,UAAU,CAACQ,GAAX,GAAiB,EAFhB;AAGXC,cAAAA,QAAQ,EAAEV,UAAU,CAACS,GAAX,GAAiB,EAHhB;AAIXE,cAAAA,QAAQ,EAAEX,UAAU,CAACS,GAAX,GAAiB,EAJhB;AAKXF,cAAAA,IAAI,EAAE,OALK;AAMXK,cAAAA,KAAK,EAAE;AANI,aAAD,CAAZ;AAQAR,YAAAA,SAAS;AACT;AACD;AAxCH;AA0CD;AACF;;AACD,SAAOC,UAAU,EAAjB;AACD","sourcesContent":["import React from \"react\";\r\n\r\nexport default function ClockEvaluator({\r\n  breakValue,\r\n  focusValue,\r\n  clockValue,\r\n  clockHandler,\r\n  playPause,\r\n}) {\r\n  function finishEval() {\r\n    if (clockValue.curFocus !== 0) {\r\n      switch (true) {\r\n        case clockValue.mode === \"Stopped\": {\r\n          clockHandler({\r\n            valFocus: focusValue.val * 60,\r\n            curFocus: focusValue.val * 60,\r\n            valBreak: breakValue.val * 60,\r\n            curBreak: breakValue.val * 60,\r\n            mode: \"Focus\",\r\n            state: \"Stopped\",\r\n          });\r\n          playPause();\r\n          break;\r\n        }\r\n        case clockValue.mode === \"Focus\": {\r\n          clockHandler({\r\n            ...clockValue,\r\n            curFocus: clockValue.curFocus - 1,\r\n            state: \"Running\",\r\n          });\r\n          break;\r\n        }\r\n        case clockValue.mode === \"Break\": {\r\n          clockHandler({\r\n            ...clockValue,\r\n            curFocus: clockValue.curFocus - 1,\r\n            state: \"Running\",\r\n          });\r\n          break;\r\n        }\r\n        default: {\r\n          clockHandler({\r\n            valFocus: focusValue.val * 60,\r\n            curFocus: focusValue.val * 60,\r\n            valBreak: breakValue.val * 60,\r\n            curBreak: breakValue.val * 60,\r\n            mode: \"Focus\",\r\n            state: \"Stopped\",\r\n          });\r\n          playPause();\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return finishEval();\r\n}\r\n"]},"metadata":{},"sourceType":"module"}