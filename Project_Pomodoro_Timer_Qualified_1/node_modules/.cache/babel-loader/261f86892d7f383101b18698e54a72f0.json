{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Heru1\\\\Documents\\\\GitHub\\\\ThinkfulProjects\\\\M-23\\\\23-02\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\ButtonComponent.js\";\nimport React, { useState } from \"react\";\nexport default function ButtonComponent({\n  type,\n  className,\n  dataTestid,\n  className2,\n  BreakValue,\n  BreakHandler,\n  FocusValue,\n  FocusHandler\n}) {\n  function valueIncrement() {\n    const preValue = Value.value;\n\n    if (Value.value < Value.max) {\n      Value.value += Value.inc;\n      console.log(`Sanity Check: Button | Value ${preValue} increased to ${Value.value}`);\n    } else {\n      console.log(`Sanity Check: Button | Value ${preValue} has hit the Limit`);\n    }\n\n    ;\n  }\n\n  ;\n\n  function valueDecrement() {\n    const preValue = Value.value;\n\n    if (Value.value > Value.min) {\n      Value.value -= Value.inc;\n      console.log(`Sanity Check: Button | Value ${preValue} increased to ${Value.value}`);\n    } else {\n      console.log(`Sanity Check: Button | Value ${preValue} has hit the Limit`);\n    }\n\n    ;\n  }\n\n  ;\n\n  const ButtonComponent = ({\n    target\n  }) => {\n    switch (true) {\n      case dataTestid === \"increase-focus\":\n        {\n          valueIncrement();\n          FocusHandler(FocusValue);\n          break;\n        }\n        ;\n\n      case dataTestid === \"decrease-focus\":\n        {\n          valueDecrement();\n          FocusHandler(FocusValue);\n          break;\n        }\n        ;\n\n      case dataTestid === \"increase-break\":\n        {\n          valueIncrement();\n          BreakHandler(BreakValue);\n          break;\n        }\n        ;\n\n      case dataTestid === \"decrease-break\":\n        {\n          valueDecrement();\n          BreakHandler(BreakValue);\n          break;\n        }\n        ;\n\n      default:\n        break;\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    type: type,\n    className: className,\n    \"data-testid\": dataTestid,\n    onClick: ButtonComponent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: className2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Heru1/Documents/GitHub/ThinkfulProjects/M-23/23-02/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ButtonComponent.js"],"names":["React","useState","ButtonComponent","type","className","dataTestid","className2","BreakValue","BreakHandler","FocusValue","FocusHandler","valueIncrement","preValue","Value","value","max","inc","console","log","valueDecrement","min","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,eAAe,SAASC,eAAT,CAAyB;AACtCC,EAAAA,IADsC;AAEtCC,EAAAA,SAFsC;AAGtCC,EAAAA,UAHsC;AAItCC,EAAAA,UAJsC;AAKtCC,EAAAA,UALsC;AAMtCC,EAAAA,YANsC;AAOtCC,EAAAA,UAPsC;AAQtCC,EAAAA;AARsC,CAAzB,EASZ;AACD,WAASC,cAAT,GAA0B;AACxB,UAAMC,QAAQ,GAAGC,KAAK,CAACC,KAAvB;;AACA,QAAID,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACE,GAAxB,EAA6B;AAC3BF,MAAAA,KAAK,CAACC,KAAN,IAAeD,KAAK,CAACG,GAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CACG,gCAA+BN,QAAS,iBAAgBC,KAAK,CAACC,KAAM,EADvE;AAGD,KALD,MAKO;AACLG,MAAAA,OAAO,CAACC,GAAR,CAAa,gCAA+BN,QAAS,oBAArD;AACD;;AAAA;AACF;;AAAA;;AAED,WAASO,cAAT,GAA0B;AACxB,UAAMP,QAAQ,GAAGC,KAAK,CAACC,KAAvB;;AACA,QAAID,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACO,GAAxB,EAA6B;AAC3BP,MAAAA,KAAK,CAACC,KAAN,IAAeD,KAAK,CAACG,GAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CACG,gCAA+BN,QAAS,iBAAgBC,KAAK,CAACC,KAAM,EADvE;AAGD,KALD,MAKO;AACLG,MAAAA,OAAO,CAACC,GAAR,CAAa,gCAA+BN,QAAS,oBAArD;AACD;;AAAA;AACF;;AAAA;;AAED,QAAMV,eAAe,GAAG,CAAC;AAAEmB,IAAAA;AAAF,GAAD,KAAgB;AACtC,YAAQ,IAAR;AACE,WAAKhB,UAAU,KAAK,gBAApB;AAAsC;AACpCM,UAAAA,cAAc;AACdD,UAAAA,YAAY,CAACD,UAAD,CAAZ;AACA;AACD;AAAA;;AACD,WAAKJ,UAAU,KAAK,gBAApB;AAAsC;AACpCc,UAAAA,cAAc;AACdT,UAAAA,YAAY,CAACD,UAAD,CAAZ;AACA;AACD;AAAA;;AACD,WAAKJ,UAAU,KAAK,gBAApB;AAAsC;AACpCM,UAAAA,cAAc;AACdH,UAAAA,YAAY,CAACD,UAAD,CAAZ;AACA;AACD;AAAA;;AACD,WAAKF,UAAU,KAAK,gBAApB;AAAsC;AACpCc,UAAAA,cAAc;AACdX,UAAAA,YAAY,CAACD,UAAD,CAAZ;AACA;AACD;AAAA;;AACD;AACE;AAtBJ;;AAuBC;AACF,GAzBD;;AA2BA,sBACE;AACE,IAAA,IAAI,EAAEJ,IADR;AAEE,IAAA,SAAS,EAAEC,SAFb;AAGE,mBAAaC,UAHf;AAIE,IAAA,OAAO,EAAEH,eAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAM,IAAA,SAAS,EAAEI,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function ButtonComponent({\r\n  type,\r\n  className,\r\n  dataTestid,\r\n  className2,\r\n  BreakValue,\r\n  BreakHandler,\r\n  FocusValue,\r\n  FocusHandler,\r\n}) {\r\n  function valueIncrement() {\r\n    const preValue = Value.value;\r\n    if (Value.value < Value.max) {\r\n      Value.value += Value.inc;\r\n      console.log(\r\n        `Sanity Check: Button | Value ${preValue} increased to ${Value.value}`\r\n      );\r\n    } else {\r\n      console.log(`Sanity Check: Button | Value ${preValue} has hit the Limit`);\r\n    };\r\n  };\r\n\r\n  function valueDecrement() {\r\n    const preValue = Value.value;\r\n    if (Value.value > Value.min) {\r\n      Value.value -= Value.inc;\r\n      console.log(\r\n        `Sanity Check: Button | Value ${preValue} increased to ${Value.value}`\r\n      );\r\n    } else {\r\n      console.log(`Sanity Check: Button | Value ${preValue} has hit the Limit`);\r\n    };\r\n  };\r\n\r\n  const ButtonComponent = ({ target }) => {\r\n    switch (true) {\r\n      case dataTestid === \"increase-focus\": {\r\n        valueIncrement();\r\n        FocusHandler(FocusValue);\r\n        break;\r\n      };\r\n      case dataTestid === \"decrease-focus\": {\r\n        valueDecrement();\r\n        FocusHandler(FocusValue);\r\n        break;\r\n      };\r\n      case dataTestid === \"increase-break\": {\r\n        valueIncrement();\r\n        BreakHandler(BreakValue);\r\n        break;\r\n      };\r\n      case dataTestid === \"decrease-break\": {\r\n        valueDecrement();\r\n        BreakHandler(BreakValue);\r\n        break;\r\n      };\r\n      default:\r\n        break;\r\n    };\r\n  };\r\n\r\n  return (\r\n    <button\r\n      type={type}\r\n      className={className}\r\n      data-testid={dataTestid}\r\n      onClick={ButtonComponent}\r\n    >\r\n      <span className={className2} />\r\n    </button>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}